\docType{class}
\name{DESeqDataSet}
\alias{DESeqDataSet}
\alias{DESeqDataSet-class}
\alias{DESeqDataSetFromHTSeqCount}
\alias{DESeqDataSetFromMatrix}
\title{DESeqDataSet object and constructors}
\usage{
  DESeqDataSet(se, design)

  DESeqDataSetFromMatrix(countData, colData, design, ...)

  DESeqDataSetFromHTSeqCount(sampleTable, directory = "",
    design, ...)
}
\arguments{
  \item{se}{a \code{SummarizedExperiment} with at least one
  column in colData, and the counts as the first element in
  the assays list, which will be renamed "counts".  A
  \code{SummarizedExperiment} object can be generated by
  the function \code{summarizeOverlaps} in the
  GenomicRanges package.}

  \item{design}{a formula which specifies the design of the
  experiment, taking the form \code{formula(~ x + y + z)}.
  By default, the functions in this package will use the
  last variable in the formula (e.g. z) for presenting
  results (fold changes, etc.) and plotting.}

  \item{countData}{for matrix input: a matrix of
  non-negative integers}

  \item{colData}{for matrix input: a \code{DataFrame} or
  \code{data.frame} with at least a single column. Rows of
  colData correspond to columns of countData.}

  \item{sampleTable}{for htseq-count: a \code{data.frame}
  with three or more columns. Each row describes one
  sample. The first column is the sample name, the second
  column the file name of the count file generated by
  htseq-count, and the remaining columns are sample
  metadata which will be stored in \code{colData}}

  \item{directory}{for htseq-count: the directory relative
  to which the filenames are specified}

  \item{...}{arguments provided to
  \code{SummarizedExperiment} including rowData and
  exptData}
}
\value{
  A DESeqDataSet object.
}
\description{
  The \code{DESeqDataSet} is a subclass of
  \code{SummarizedExperiment}, used to store the input
  values, intermediate calculations and results of an
  analysis of differential expression.  The
  \code{DESeqDataSet} class enforces non-negative integer
  values in the "counts" matrix stored as the first element
  in the assay list. In addition, a formula which specifies
  the design of the experiment must be provided. The
  constructor functions create a DESeqDataSet object from
  various types of input: a SummarizedExperiment, a matrix,
  or count files generated by the python package HTSeq.
  See the vignette for examples of construction from all
  three input types.
}
\examples{
countData <- matrix(1:4,ncol=2)
colData <- DataFrame(condition=factor(c("a","b")))
dds <- DESeqDataSetFromMatrix(countData, colData, formula(~ condition))
}
\references{
  See \url{http://www-huber.embl.de/users/anders/HTSeq} for
  htseq-count
}

